package betterterrain;

import betterterrain.biome.BTABiomeConfiguration;
import net.minecraft.src.GenLayer;
import net.minecraft.src.IntCache;

public class BTAGenLayerShoreGuaranteed extends BTAGenLayer
{
	private BTAWorldConfigurationInfo generatorInfo;

	public BTAGenLayerShoreGuaranteed(long par1, GenLayer parent, BTAWorldConfigurationInfo generatorInfo)
	{
		super(par1);
		this.parent = parent;
		this.generatorInfo = generatorInfo;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer subclass.
	 */
	public int[] getInts(int xOffset, int zOffset, int xSize, int zSize)
	{
		int[] parentInts = this.parent.getInts(xOffset - 1, zOffset - 1, xSize + 2, zSize + 2);
		int[] intCache = IntCache.getIntCache(xSize * zSize);

		for (int i = 0; i < zSize; ++i)
		{
			for (int j = 0; j < xSize; ++j)
			{
				this.initChunkSeed((long)(j + xOffset), (long)(i + zOffset));
				int currentBiome = parentInts[j + 1 + (i + 1) * (xSize + 2)];
				int neighbor1;
				int neighbor2;
				int neighbor3;
				int neighbor4;


				neighbor1 = parentInts[j + 1 + (i + 1 - 1) * (xSize + 2)];
				neighbor2 = parentInts[j + 1 + 1 + (i + 1) * (xSize + 2)];
				neighbor3 = parentInts[j + 1 - 1 + (i + 1) * (xSize + 2)];
				neighbor4 = parentInts[j + 1 + (i + 1 + 1) * (xSize + 2)];

				//If all surrounding biomes are the same as the current biome do not form an edge
				if (neighbor1 == currentBiome && neighbor2 == currentBiome && neighbor3 == currentBiome && neighbor4 == currentBiome) {
					intCache[j + i * xSize] = currentBiome;
				}
				else if (BTABiomeConfiguration.getEdgeVariantForBiomeGuaranteed(currentBiome, this.generatorInfo) != -1) {
					intCache[j + i * xSize] = BTABiomeConfiguration.getEdgeVariantForBiomeGuaranteed(currentBiome, this.generatorInfo);
				}
				else {
					intCache[j + i * xSize] = currentBiome;
				}
			}
		}

		return intCache;
	}
}
